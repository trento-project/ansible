#cloud-config
password: {{ kubevirt_vm_sles_password }}
chpasswd:
  expire: false

ssh_pwauth: false

write_files:
- path: /run/scripts/convert_sles4sap.sh
  permissions: 0755
  content: |-
    #!/bin/bash

    # Set some constants
    ARCH=$(uname -m)
    SLE_VERSION=$(sed -n 's/^VERSION_ID="\(.*\)"$/\1/p' /etc/os-release)
    SLES_SAP_MODULES="SLES_SAP sle-module-basesystem \
                               sle-module-desktop-applications \
                               sle-module-server-applications \
                               sle-ha sle-module-sap-applications"

    # We need to remove the sles-release package so no conflicts
    # when registering SLES_SAP
    rpm --erase --nodeps sles-release

    register() {
        if [[ "$1" == *"module"* ]]; then
            SUSEConnect -p "$1/${SLE_VERSION}/${ARCH}"
        else
            SUSEConnect -p "$1/${SLE_VERSION}/${ARCH}" -r {{ kubevirt_vm_sles4sap_regcode }}
        fi
    }

    for product in $SLES_SAP_MODULES; do
        register "$product"
    done

    # Install SLES_SAP default packages
    zypper -n install --auto-agree-with-licenses -f patterns-server-enterprise-sap_server

    # --- Enable optinal SUSE modules
    # Note: This section should ideally be handled in our ansible
    # playbook. However, for now, we'll configure it here.
    SLES_OPTIONAL_MODULES="PackageHub sle-module-containers"
    if [ "$SLE_VERSION" != "15.3" ]; then
       SLES_OPTIONAL_MODULES="sle-module-python3 ${SLES_OPTIONAL_MODULES}"
    fi

    for  product in $SLES_OPTIONAL_MODULES; do
        register "$product"
    done

runcmd:
- "/run/scripts/convert_sles4sap.sh"
