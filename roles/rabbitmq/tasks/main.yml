# code: language=ansible
---
- name: Install rabbitmq
  community.general.zypper:
    name: rabbitmq-server
    state: present
    update_cache: true

- name: Ensure /etc/rabbitmq/ssl directory exists
  ansible.builtin.file:
    path: /etc/rabbitmq/ssl
    state: directory
    mode: '0700'

- name: Add certificate files
  ansible.builtin.copy:
    content: "{{ item.content | b64decode if item.base64 == 'true' else item.content }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0644"
  loop:
    - content: "{{ rabbitmq_ssl_cert }}"
      dest: "/etc/rabbitmq/ssl/cert.pem"
      base64: "{{ rabbitmq_ssl_cert_as_base64 }}"
    - content: "{{ rabbitmq_ssl_key }}"
      dest: "/etc/rabbitmq/ssl/key.pem"
      base64: "{{ rabbitmq_ssl_key_as_base64 }}"
    - content: "{{ rabbitmq_ssl_ca_cert }}"
      dest: "/etc/rabbitmq/ssl/ca.pem"
      base64: "{{ rabbitmq_ssl_ca_cert_as_base64 }}"

- name: Start rabbitmq service
  ansible.builtin.service:
    name: rabbitmq-server
    state: started
    enabled: true
  vars:
    rabbitmq_ssl_cert: /etc/rabbitmq/ssl/cert.pem
    rabbitmq_ssl_key: /etc/rabbitmq/ssl/key.pem
    rabbitmq_ssl_ca: /etc/rabbitmq/ssl/cacert.pem

- name: Create rabbitmq trento vhost
  community.rabbitmq.rabbitmq_vhost:
    name: "{{ rabbitmq_vhost }}"
    node: "{{ rabbitmq_node_name }}"
    state: present

- name: Configure rabbitmq trento user
  community.rabbitmq.rabbitmq_user:
    user: "{{ rabbitmq_username }}"
    node: "{{ rabbitmq_node_name }}"
    password: "{{ rabbitmq_password }}"
    permissions:
      - vhost: "{{ rabbitmq_vhost }}"
        configure_priv: ".*"
        read_priv: ".*"
        write_priv: ".*"
